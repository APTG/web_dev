{"version":3,"sources":["Components/Pages/Calculator.js","Components/Pages/Energy.js","Components/Toggle.js","Components/JSRootGraph.js","Components/Form.js","Backend/WASMWrapper.js","Components/Pages/StoppingPower.js","Components/ContentWrapper.js","Components/Footer/github-logo.png","Components/Footer/Footer.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["CalculatorComponent","React","Component","EnergyComponent","Toggle","name","children","startValue","onChange","useState","selected","setSelected","className","map","c","k","onClick","newState","defaultProps","JSROOT","Form","props","handleSubmit","bind","state","method","event","preventDefault","this","onSubmit","target","elements","value","plot_using","particle","material","setState","data-testid","type","htmlFor","id","step","defaultValue","placeholder","onMethodChange","key","createTGraphFromTrace","trace","createTGraph","y","length","x","createMultigraphFromProps","traces","createTMultiGraph","drawOptFromProps","res","logx","push","logy","plotStyle","join","JSRootGraph","graphRef","createRef","drawn","window","toDraw","draw","current","nextProps","nextState","some","el","cleanup","opts","console","log","then","_","style","width","height","ref","StoppingPowerComponent","ready","layout","submitHandler","onXAxisStateChange","onYAxisStateChange","onPlottingMethodChange","message","Array","from","Math","random","forceUpdate","display","flexDirection","gap","padding","line","PureComponent","ContentWrapper","minHeight","to","marginTop","paddingBottom","path","StoppingPower","Energy","Calculator","makeAsyncScriptLoader","globalName","Footer","alt","src","logo","data","commit","date","branch","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d23f740d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react'\n\nclass CalculatorComponent extends React.Component {\n    static propTypes = {\n        ready: PropTypes.bool.isRequired\n    }\n\n    render() {\n        return <>HELLO CALCULATOR</>;\n    }\n}\n\nexport default CalculatorComponent;","import PropTypes from 'prop-types';\nimport React from 'react'\n\nclass EnergyComponent extends React.Component {\n    static propTypes = {\n        ready: PropTypes.bool.isRequired\n    }\n\n    render() {\n        return <>HELLO ENERGY</>;\n    }\n}\n\nexport default EnergyComponent;","import React, { useState } from 'react';\nimport '../Styles/Toggle.css'\nimport PropTypes from 'prop-types'\n\nfunction Toggle({ name, children, startValue, onChange }) {\n    const [selected, setSelected] = useState(startValue);\n\n    const exportChange = (newState) => {\n        setSelected(newState);\n        onChange(newState);\n    }\n\n    return (\n        <div className=\"toggle-body\">\n            {name && <div className=\"toggle-name\">{name}</div>}\n            <div className=\"option-container\">\n                {children.map((c, k) => {\n                    return (\n                        <div key={`toggle-${name}-${k}`} onClick={() => exportChange(k)} className={`toggle-option${selected === k ? \" selected\" : \"\"}`}>\n                            {c}\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nToggle.propTypes = {\n    name: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\n    startValue: PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n}\n\nToggle.defaultProps = {\n    startValue: 0\n}\n\nexport default Toggle;","import React, { createRef } from \"react\";\nimport PropTypes from 'prop-types';\n\nlet JSROOT\n//#region Helper functions\n\nfunction createTGraphFromTrace(trace) {\n    return JSROOT.createTGraph(trace.y.length, trace.x, trace.y)\n}\n\nfunction createMultigraphFromProps(traces) {\n    return JSROOT.createTMultiGraph(...(traces.map(createTGraphFromTrace)));\n}\n\nfunction drawOptFromProps(props) {\n    const res = [];\n    if (props.logx === 1) res.push(\"logx\");\n    if (props.logy === 1) res.push(\"logy\");\n    if (props.plotStyle === 1) res.push(\"P\");\n\n    return res.join(';');\n}\n\n//#endregion Helper functions\n\n// COMPONENT\n\nexport default class JSRootGraph extends React.Component {\n\n    static traces = 0;\n\n    static propTypes = {\n        logx: PropTypes.oneOf([0, 1]).isRequired,\n        logy: PropTypes.oneOf([0, 1]).isRequired,\n        plotStyle: PropTypes.oneOf([0, 1]).isRequired,\n        traces: PropTypes.arrayOf(\n            PropTypes.shape({\n                x: PropTypes.arrayOf(PropTypes.number),\n                y: PropTypes.arrayOf(PropTypes.number)\n            })\n        ).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.graphRef = createRef(null);\n\n        this.state = {\n            traces: [],\n            drawn: false\n        }\n\n        JSROOT = window.JSROOT;\n    }\n\n    static getDerivedStateFromProps(props, _) {\n        return {\n            traces: props.traces,\n            drawn: props.traces.length === JSRootGraph.traces\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.traces.length !== 0) {\n            const toDraw = createMultigraphFromProps(this.props.traces);\n            JSROOT.draw(this.graphRef.current, toDraw, drawOptFromProps(this.props))\n        }\n        else {\n            JSROOT.draw(this.graphRef.current, JSROOT.createTGraph(1))\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const should = !nextState.drawn\n            || ['logx', 'logy', 'plotStyle'].some(el => this.props[el] !== nextProps[el])\n\n        if (should) {\n            JSROOT.cleanup(this.graphRef.current);\n            const toDraw = createMultigraphFromProps(nextState.traces);\n            const opts = drawOptFromProps(nextProps);\n            console.log(opts);\n            JSROOT.draw(this.graphRef.current, toDraw, opts)\n                .then(_ => {\n                    JSRootGraph.traces = nextProps.traces.length;\n                    this.setState({\n                        drawn: true\n                    })\n                });\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ width: \"100%\", height: 480 }} ref={this.graphRef}></div>\n            </div>\n        )\n    }\n}","import { getMaterials, getParticles } from '../Backend/WASMWrapper';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Toggle from './Toggle';\n\nimport '../Styles/Form.css'\n\nexport default class Form extends React.Component {\n\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired\n    }\n\n    constructor({ props }) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            method: 0\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.props.onSubmit({\n            name: event.target.elements.name.value,\n            plot_using: event.target.elements.plot_using.value,\n            method: this.state.method,\n            particle: event.target.elements.particle.value,\n            material: event.target.elements.material.value,\n        })\n    }\n\n    onMethodChange(newState) {\n        this.setState({ method: newState })\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} data-testid=\"form-1\" className=\"particle-input\">\n                <div>\n                    <label className=\"input-wrapper\">\n                        Name\n                        <input name=\"name\" type=\"text\" className=\"input-box\" />\n                    </label>\n                    <div className=\"input-wrapper\">\n                        <label htmlFor=\"plot_using\">Plot using</label>\n                        <div className=\"toggle-compound\">\n                            <input name=\"plot_using\" id=\"plot_using\" className=\"input-box\" type=\"number\" step=\"0.01\" defaultValue={500} placeholder={500} />\n                            <Toggle name={''} onChange={this.onMethodChange.bind(this)}>\n                                {\"Step\"}\n                                {\"Points\"}\n                            </Toggle>\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <label className=\"input-wrapper\">\n                        Particle\n                        <select name=\"particle\" className=\"input-box\">\n                            {getParticles().map((particle, key) => <option key={\"material_\" + key}>{particle}</option>)}\n                        </select>\n                    </label>\n                    <label className=\"input-wrapper\">\n                        Material\n                        <select name=\"material\" className=\"input-box\">\n                            {getMaterials().map((material, key) => <option key={\"material_\" + key}>{material}</option>)}\n                        </select>\n                    </label>\n                </div>\n                <button className=\"button\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n","const __wasm = __init_wasm()\n\n//#region TODO:\nfunction __init_wasm() { }\n//#endregion TODO\n\n//#region MOCK\n//#region GET\nexport function getTrace(particle, propagationMedium) {\n    if (__wasm) console.log(\"wasm\");\n    return {\n        x: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\n        y: Array.from(new Array(10),_=>Math.random()*100)\n    }\n}\n\nexport function getParticles() {\n    return ['He', 'O', 'C', 'N']\n}\n\nexport function getMaterials() {\n    return ['Water', 'Air', 'Earth', 'Fire']\n}\n//#endregion GET\n//#endregion MOCK\n\n\n","import { getTrace } from '../../Backend/WASMWrapper'\n\nimport Form from \"../Form\";\nimport JSRootGraph from \"../JSRootGraph\";\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport Toggle from \"../Toggle\";\n\nclass StoppingPowerComponent extends React.PureComponent {\n\n    static propTypes = {\n        ready: PropTypes.bool.isRequired\n    }\n\n    onXAxisStateChange(newState) {\n        this.setState({ logx: newState })\n    }\n\n    onYAxisStateChange(newState) {\n        this.setState({ logy: newState })\n    }\n\n    onPlottingMethodChange(newState) {\n        this.setState({ plotStyle: newState })\n    }\n\n    onLayoutChange(newState) {\n        this.setState({ layout: newState })\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ready: false,\n            traces: [],\n            logx: 0,\n            logy: 1,\n            plotStyle: 0,\n            layout: 0,\n        }\n\n        this.submitHandler = this.submitHandler.bind(this);\n        this.onXAxisStateChange = this.onXAxisStateChange.bind(this);\n        this.onYAxisStateChange = this.onYAxisStateChange.bind(this);\n        this.onPlottingMethodChange = this.onPlottingMethodChange.bind(this);\n    }\n\n    //TODO\n    submitHandler(message) {\n        const traces = this.state.traces;\n        traces.push(getTrace(message, \"\"));\n        this.setState({\n            traces: traces\n        })\n        this.forceUpdate();\n    }\n\n    render() {\n        return (\n            <div className=\"content gridish\">\n                <div>\n                    <Form onSubmit={this.submitHandler} layout={this.state.layout} />\n                    <div style={{ display: \"flex\", flexDirection: \"row\", gap: 20, padding: \"1rem 3rem\" }}>\n                        <Toggle onChange={this.onXAxisStateChange} name={\"X Axis:\"} startValue={this.state.logx}>\n                             {\"Linear\"}\n                             {\"Logarithmic\"}\n                        </Toggle>\n                        <Toggle onChange={this.onYAxisStateChange} name={\"Y Axis:\"} startValue={this.state.logy}>\n                             {\"Linear\"}\n                             {\"Logarithmic\"}\n                        </Toggle>\n                        <Toggle onChange={this.onPlottingMethodChange} name={\"Plotting Method:\"} startValue={this.state.line}>\n                             {\"Line\"}\n                             {\"Points\"}\n                        </Toggle>\n                    </div>\n                </div>\n                {\n                    this.props.ready\n                        ? <JSRootGraph traces={this.state.traces} logx={this.state.logx} logy={this.state.logy} plotStyle={this.state.plotStyle} />\n                        : <h2>JSROOT still loading</h2>\n                }\n            </div>\n        )\n    }\n}\n\nexport default StoppingPowerComponent;","import { Link, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport CalculatorComponent from \"./Pages/Calculator\";\nimport EnergyComponent from \"./Pages/Energy\";\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport StoppingPowerComponent from \"./Pages/StoppingPower\";\n\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nimport '../Styles/Nav.css'\n\nconst JSRootLink = 'https://root.cern.ch/js/latest/scripts/JSRoot.core.js';\n\nclass ContentWrapper extends React.Component {\n\n    static propTypes = {\n        JSROOT: PropTypes.object\n    }\n\n    shouldComponentUpdate() {\n        return !this.props.JSROOT;\n    }\n\n    render() {\n        const { JSROOT } = this.props\n\n        return (\n            <Router>\n                <div style={{ minHeight: \"calc(100vh - 7.5em)\" }}>\n                    <div className=\"nav-menu\">\n                        <Link to={'/StoppingPower'}>Stopping Power</Link>\n                        <Link to={'/Energy'}>Energy</Link>\n                        <Link to={'/Calculator'}>Single Value Calculator</Link>\n                    </div>\n                    <div style={{ marginTop: \"2.5em\", paddingBottom: \"1em\" }}>\n                        <Switch>\n                            <Route path={'/StoppingPower'}>\n                                <StoppingPowerComponent ready={JSROOT ? true : false} />\n                            </Route>\n                            <Route path={'/Energy'}>\n                                <EnergyComponent ready={JSROOT ? true : false} />\n                            </Route>\n                            <Route path={'/Calculator'} >\n                                <CalculatorComponent ready={JSROOT ? true : false} />\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default makeAsyncScriptLoader(JSRootLink, {\n    globalName: \"JSROOT\"\n})(ContentWrapper);","export default __webpack_public_path__ + \"static/media/github-logo.746ec8f0.png\";","import React from 'react';\nimport data from './deploy.json'\nimport logo from './github-logo.png'\n\n\nimport '../../Styles/Footer.css'\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\" id=\"footer\">\n            <div>dEdx-Web &copy; 2021. Code available at <img alt=\"github-logo\" src={logo} /></div>\n            <p>{`commit ${data.commit} released on ${data.date} on branch ${data.branch}`}</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import ContentWrapper from \"./ContentWrapper\"  // skipcq: JS-E1007, JS-P1003, JS-W1028, JS-W1029\nimport Footer from \"./Footer/Footer\"\nimport React from 'react'\n\nconst Main = () => {\n    return (\n        <>\n            <div className=\"site-wrapper\">\n                <ContentWrapper />\n            </div>\n            <Footer />\n        </>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\n\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}